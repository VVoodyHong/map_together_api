plugins {
    id 'org.springframework.boot' version '2.6.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'com.mapto'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    // swagger
    implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.6.6'

    // to read log4j.yml (only xml can be read)
    implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.10.3'

    // lombok
    implementation 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'

    // Querydsl
    implementation 'com.querydsl:querydsl-jpa'

    // Querydsl JPAAnnotationProcessor 사용 지정
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"

    // java.lang.NoClassDefFoundError(javax.annotation.Entity) 발생 대응
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // java.lang.NoClassDefFoundError(javax.annotation.Generated) 발생 대응
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"

    // dto <-> entry mapping
    implementation group: 'org.modelmapper', name: 'modelmapper', version: '3.0.0'

    // jwt
    implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.0'

    // https://mvnrepository.com/artifact/com.amazonaws/aws-java-sdk
    implementation group: 'com.amazonaws', name: 'aws-java-sdk', version: '1.11.845'

    runtimeOnly 'com.h2database:h2:2.1.210'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

configurations {
    all{
        exclude group: 'org.springframework.boot', module:'spring-boot-starter-logging'
    }
}

ext.profile = (!project.hasProperty('profile') || !profile) ? 'dev' : profile

sourceSets{
    main{
        resources {
            srcDirs "src/main/resources/resources-${profile}"
            exclude "resources-*"
        }
    }
}


tasks { processResources { duplicatesStrategy = DuplicatesStrategy.INCLUDE }}


test {
    useJUnitPlatform()
}